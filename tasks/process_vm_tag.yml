- name: Display the outer loop
  debug:
    msg: "vCenter Tag: {{ vm_tag_item }}"

- name: Gather facts from vCenter virtual machines
  vmware_guest_facts:
    hostname: "{{ lookup('env','VMWARE_SERVER') }}"
    username: "{{ lookup('env','VMWARE_USERNAME') }}"
    password: "{{ lookup('env','VMWARE_PASSWORD') }}"
    datacenter: '{{ vmware_datacenter }}'
    uuid: '{{ vm_item[-36:] }}'
    validate_certs: '{{ vmware_validate_certs }}'
  register: vm_facts
  with_inventory_hostnames: '{{ vm_tag_item }}'
  loop_control:
    loop_var: vm_item

- name: Display the VM facts
  debug:
    msg: "tag={{ vm_tag_item }}, ipv4={{ fact_item.instance.ipv4 }}, ipv6={{ fact_item.instance.ipv6 }}"
  with_items: '{{ vm_facts.results }}'
  loop_control:
    loop_var: fact_item
    label: "{{ fact_item.instance.hw_name }}"

- name: Add each IP:Tag pair to a dictionary
  import: process_vm_ip4.yml
#  when: ip_item.instance.ipv4 | length > 0
  when: ip_item.instance.ipv4 != ""
  with_items: '{{ vm_facts.results }}'
  loop_control:
    loop_var: ip_item
    label: "{{ ip_item.instance.ipv4 }}"

- import: process_vm_ip6.yml
#  when: ip_item.instance.ipv6 | length > 0
  when: ip_item.instance.ipv6 != ""
  with_items: '{{ vm_facts.results }}'
  loop_control:
    loop_var: ip_item
    label: "{{ ip_item.instance.ipv6 }}"